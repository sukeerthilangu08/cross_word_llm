Overview of the Command-Line Crossword Generator

This document outlines the design and functionality of an automated command-line tool for
generating crossword puzzles. The tool takes a list of words as input and automatically
constructs a crossword grid, focusing on the placement of words and the structural integrity of
the puzzle.

Key Features:
- Dynamic Grid Size: The grid size is not fixed and will be determined based on the size  specified by the user.
- Intelligent Word Placement: The placement algorithm prioritizes words that create the most intersections with existing words on the grid.
- Symmetric Black Square Placement: Black squares are added to the grid to ensure 180-degree rotational symmetry and to prevent words shorter than three letters.
- User Confirmation: The program will prompt the user for confirmation before generating the crossword.
- Grid Size Selection: The user can optionally specify the desired grid size.

Game Flow (Generation Process):
1.  The program starts (e.g., by running `python crossword_generator.py`).
2.  The console prompts the user with a "yes or no" question to confirm crossword generation.
3.  If the user confirms, the console prompts the user to select the desired grid size.
4.  It reads words from the `words.txt` file.
5.  An empty grid is initialized, with dimensions calculated based on user input or to best fit the given words.
6.  **The empty grid is displayed in the command line.**
7.  Black squares are strategically placed to ensure rotational symmetry.
8.  Words are iteratively placed onto the grid, respecting the black squares. The algorithm prioritizes placing words with more potential intersections first. If a word cannot be placed, it is skipped and reported to the user.
9.  The final generated crossword grid (with words filled, including black squares) is displayed in the command line.

Output Format:
The tool outputs two grids to the command line:
1.  An initial empty grid.
2.  The final generated crossword grid, showing the placed words and using a specific character (e.g., '#') for black squares.
Clues are not generated by this tool; the focus is solely on the grid generation.

The script will automatically read from `words.txt` and print the resulting crossword to the console.
